provider "aws" {
  shared_credentials_files = ["~/.aws/credentials"]
  region                   = var.region
}

resource "aws_servicecatalogappregistry_application" "onegameperday_app" {
  name        = "onegameperday"
  description = "One game per day generated by LLM"
}

resource "random_string" "random" {
  length  = 6
  special = false
  upper   = false
}

resource "aws_s3_bucket" "bucket" {
  bucket = "revbucket-${random_string.random.result}"
  tags   = aws_servicecatalogappregistry_application.onegameperday_app.application_tag
}

resource "aws_s3_bucket_website_configuration" "blog" {
  bucket = aws_s3_bucket.bucket.id
  index_document {
    suffix = "index.html"
  }
  error_document {
    key = "error.html"
  }
}

resource "aws_s3_bucket_public_access_block" "public_access_block" {
  bucket                  = aws_s3_bucket.bucket.id
  block_public_acls       = false
  block_public_policy     = false
  ignore_public_acls      = false
  restrict_public_buckets = false
}

resource "aws_s3_object" "upload_object" {
  for_each     = fileset("../static/", "*")
  bucket       = aws_s3_bucket.bucket.id
  key          = each.value
  source       = "../static/${each.value}"
  etag         = filemd5("../static/${each.value}")
  content_type = "text/html"
}

resource "aws_s3_bucket_policy" "allow_access_from_everywhere" {
  bucket = aws_s3_bucket.bucket.id
  policy = data.aws_iam_policy_document.allow_access_from_everywhere.json
}

data "aws_iam_policy_document" "allow_access_from_everywhere" {
  statement {
    principals {
      type        = "*"
      identifiers = ["*"]
    }

    actions = [
      "s3:GetObject",
    ]

    resources = [
      "${aws_s3_bucket.bucket.arn}/*",
    ]
  }
}
